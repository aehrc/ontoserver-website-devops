# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'true'
    - name: Cache Package
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: tidy
    - name: Find broken pages
      # https://manpages.org/tidy
      run:  find site/ -type f -name "*.html" -exec tidy -file {}-error.txt -modify -utf8 -indent --clean yes --doctype html5 {} \;
    - uses: actions/upload-artifact@v4
      with:
        # Name of the artifact to upload.
        # Optional. Default is 'artifact'
        name: errors

        # A file, directory or wildcard pattern that describes what to upload
        # Required.
        path: errors.txt

        # The desired behavior if no files are found using the provided path.
        # Available Options:
        #   warn: Output a warning but do not fail the action
        #   error: Fail the action with an error message
        #   ignore: Do not output any warnings or errors, the action does not fail
        # Optional. Default is 'warn'
        if-no-files-found: warn

        # Duration after which artifact will expire in days. 0 means using default retention.
        # Minimum 1 day.
        # Maximum 90 days unless changed from the repository settings page.
        # Optional. Defaults to repository settings.
        retention-days: 1

        # The level of compression for Zlib to be applied to the artifact archive.
        # The value can range from 0 to 9.
        # For large files that are not easily compressed, a value of 0 is recommended for significantly faster uploads.
        # Optional. Default is '6'
        compression-level: 6

        # If true, an artifact with a matching name will be deleted before a new one is uploaded.
        # If false, the action will fail if an artifact for the given name already exists.
        # Does not fail if the artifact does not exist.
        # Optional. Default is 'false'
        overwrite: false
    - uses: actions/upload-artifact@v4
      with:
        # Name of the artifact to upload.
        # Optional. Default is 'artifact'
        name: site

        # A file, directory or wildcard pattern that describes what to upload
        # Required.
        path: site/

        # The desired behavior if no files are found using the provided path.
        # Available Options:
        #   warn: Output a warning but do not fail the action
        #   error: Fail the action with an error message
        #   ignore: Do not output any warnings or errors, the action does not fail
        # Optional. Default is 'warn'
        if-no-files-found: warn

        # Duration after which artifact will expire in days. 0 means using default retention.
        # Minimum 1 day.
        # Maximum 90 days unless changed from the repository settings page.
        # Optional. Defaults to repository settings.
        retention-days: 1

        # The level of compression for Zlib to be applied to the artifact archive.
        # The value can range from 0 to 9.
        # For large files that are not easily compressed, a value of 0 is recommended for significantly faster uploads.
        # Optional. Default is '6'
        compression-level: 6

        # If true, an artifact with a matching name will be deleted before a new one is uploaded.
        # If false, the action will fail if an artifact for the given name already exists.
        # Does not fail if the artifact does not exist.
        # Optional. Default is 'false'
        overwrite: false
        
#  lhci:
#    name: Lighthouse
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - name: Use Node.js 16.x
#        uses: actions/setup-node@v3
#        with:
#          node-version: 16.x
#      - name: npm install, build
#        run: |
#          npm install
#          npm run build
#      - name: run Lighthouse CI
#        run: |
#          npm install -g @lhci/cli@0.14.x
#          lhci autorun       